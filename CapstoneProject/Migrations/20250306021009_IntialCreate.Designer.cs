// <auto-generated />
using CapstoneProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapstoneProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250306021009_IntialCreate")]
    partial class IntialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("CapstoneProject.Models.OrderHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("OrderTotal")
                        .HasColumnType("REAL");

                    b.Property<string>("PaymentIntentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SessionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("StreetAddress")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderHeaders");
                });

            modelBuilder.Entity("CapstoneProject.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductImage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("ProductPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            ProductDescription = "A deep dive into the C# programming language.",
                            ProductImage = "/images/csharp-depth.jpg",
                            ProductName = "C# in Depth",
                            ProductPrice = 39.99m
                        },
                        new
                        {
                            ProductId = 2,
                            ProductDescription = "A guide to writing clean, maintainable, and efficient code.",
                            ProductImage = "/images/clean-code.jpg",
                            ProductName = "Clean Code",
                            ProductPrice = 34.99m
                        },
                        new
                        {
                            ProductId = 3,
                            ProductDescription = "Classic book on software craftsmanship and best practices.",
                            ProductImage = "/images/pragmatic-programmer.jpg",
                            ProductName = "The Pragmatic Programmer",
                            ProductPrice = 44.99m
                        },
                        new
                        {
                            ProductId = 4,
                            ProductDescription = "A foundational book on design patterns in software development.",
                            ProductImage = "/images/design-patterns.jpg",
                            ProductName = "Design Patterns: Elements of Reusable Object-Oriented Software",
                            ProductPrice = 49.99m
                        });
                });

            modelBuilder.Entity("CapstoneProject.Models.OrderHeader", b =>
                {
                    b.HasOne("CapstoneProject.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });
#pragma warning restore 612, 618
        }
    }
}
